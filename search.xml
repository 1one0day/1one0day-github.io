<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>个人CKA证书</title>
      <link href="/2024/04/14/%E4%B8%AA%E4%BA%BACKA%E8%AF%81%E4%B9%A6/"/>
      <url>/2024/04/14/%E4%B8%AA%E4%BA%BACKA%E8%AF%81%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<p>虽然考试因为网络和考试环境卡出现点小插曲，好在还是过了</p><p><img src="https://pic.imgdb.cn/item/661ac6ee68eb935713e612df.jpg"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes-CKA练习</title>
      <link href="/2024/04/12/Kubernetes-CKA%E7%BB%83%E4%B9%A0/"/>
      <url>/2024/04/12/Kubernetes-CKA%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="Kubernetes-CKA练习"><a href="#Kubernetes-CKA练习" class="headerlink" title="Kubernetes-CKA练习"></a>Kubernetes-CKA练习</h1><h3 id="1-权限控制RBAC"><a href="#1-权限控制RBAC" class="headerlink" title="1.权限控制RBAC"></a>1.权限控制RBAC</h3><p>创建名称 deployment-clusterrole 的 ClusterRole，该⻆⾊具备创建 Deployment、Statefulset、 Daemonset 的权限，在命名空间 app-team1 中创建名称为 cicd-token 的 ServiceAccount，绑定 ClusterRole 到 ServiceAccount，且限定命名空间为 app-team1。 </p><p>考题解析： 需要熟悉创建 serviceaccount、clusterrole 和 rolebinding 的⽅法，需要限定在 ns 级别，因此最好使 ⽤ rolebinding</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在命名空间 app-team1 中创建名称为 cicd-token 的 ServiceAccount</span></span><br><span class="line"></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl create serviceaccount cicd-token -n app-team1 </span></span><br><span class="line">serviceaccount/cicd<span class="literal">-token</span> created</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建名称deployment-clusterrole 的 ClusterRole，该⻆⾊具备创建 Deployment、Statefulset、Daemonset 的权限</span></span><br><span class="line"></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl create clusterrole deployment-clusterrole --verb=create --resource=Deployment,Statefulset,Daemonset </span></span><br><span class="line">clusterrole.rbac.authorization.k8s.io/deployment<span class="literal">-clusterrole</span> created</span><br><span class="line"></span><br><span class="line"><span class="comment">#绑定 ClusterRole 到 ServiceAccount，且限定命名空间为 app-team1</span></span><br><span class="line"></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl create rolebinding cicd-clusterrole --serviceaccount=app-team1:cicd-token --clusterrole=deployment-clusterrole -n app-team1  </span></span><br><span class="line">rolebinding.rbac.authorization.k8s.io/cicd<span class="literal">-clusterrole</span> created</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl describe rolebinding cicd-clusterrole -n app-team1                         </span></span><br><span class="line">Name:         cicd<span class="literal">-clusterrole</span></span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  &lt;none&gt;</span><br><span class="line">Role:</span><br><span class="line">  Kind:  ClusterRole</span><br><span class="line">  Name:  deployment<span class="literal">-clusterrole</span></span><br><span class="line">Subjects:</span><br><span class="line">  Kind            Name        Namespace</span><br><span class="line">  <span class="literal">----</span>            <span class="literal">----</span>        <span class="literal">---------</span></span><br><span class="line">  ServiceAccount  cicd<span class="literal">-token</span>  app<span class="literal">-team1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">参考网址：https://kubernetes.io/zh<span class="literal">-cn</span>/docs/reference/access<span class="literal">-authn-authz</span>/rbac/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-设置节点不可⽤"><a href="#2-设置节点不可⽤" class="headerlink" title="2.设置节点不可⽤"></a>2.<strong>设置节点不可⽤</strong></h3><p>设置 ek8s-node-1 节点为不可⽤、重新调度该节点上的所有 pod </p><p>考题解析： cordon节点，drain 节点，需要忽略 daemonsets 并清除 local-data，否则可能⽆法驱逐 pod</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设置 ek8s-node-1 节点为不可⽤</span></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl cordon k8s-master</span></span><br><span class="line">node/k8s<span class="literal">-master</span> cordoned</span><br><span class="line"></span><br><span class="line"><span class="comment">#重新调度该节点上的所有 pod </span></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl drain k8s-master --ignore-daemonsets --delete-emptydir-data --force</span></span><br><span class="line">node/k8s<span class="literal">-master</span> already cordoned</span><br><span class="line">WARNING: ignoring Daemon<span class="built_in">Set-managed</span> Pods: kube<span class="literal">-system</span>/calico<span class="literal">-node-4l4ll</span>, kube<span class="literal">-system</span>/kube<span class="literal">-proxy-pkz69</span></span><br><span class="line">evicting pod kube<span class="literal">-system</span>/coredns<span class="literal">-7f6cbbb7b8-kzfsd</span></span><br><span class="line">evicting pod kube<span class="literal">-system</span>/calico<span class="literal">-kube-controllers-6b9fbfff44-xvqxg</span></span><br><span class="line">evicting pod kube<span class="literal">-system</span>/coredns<span class="literal">-7f6cbbb7b8-h92ch</span></span><br><span class="line">pod/calico<span class="literal">-kube-controllers-6b9fbfff44-xvqxg</span> evicted</span><br><span class="line">pod/coredns<span class="literal">-7f6cbbb7b8-h92ch</span> evicted</span><br><span class="line">pod/coredns<span class="literal">-7f6cbbb7b8-kzfsd</span> evicted</span><br><span class="line">node/k8s<span class="literal">-master</span> evicted</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">参考网址：https://kubernetes.io/zh<span class="literal">-cn</span>/docs/tasks/administer<span class="literal">-cluster</span>/safely<span class="literal">-drain-node</span>/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-升级-kubeadm"><a href="#3-升级-kubeadm" class="headerlink" title="3.升级 kubeadm"></a>3.升级 kubeadm</h3><p>考题概述：</p><p>升级 master 节点为1.29.1，升级前确保drain master 节点，不要升级worker node 、容器 manager、 etcd、 CNI插件、DNS 等内容； </p><p>考题解析： ⾸先 cordon、drain master节点，其次升级 kubeadm 并 apply 到1.29.1版本，升级 kubelet 和 kubectl</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl get nodes</span></span><br><span class="line">NAME         STATUS                     ROLES                  AGE    VERSION</span><br><span class="line">k8s<span class="literal">-master</span>   Ready,SchedulingDisabled   control<span class="literal">-plane</span>,master   <span class="number">568</span>d   v1.<span class="number">22.0</span></span><br><span class="line">k8s<span class="literal">-node1</span>    Ready                      &lt;none&gt;                 <span class="number">567</span>d   v1.<span class="number">22.0</span></span><br><span class="line">k8s<span class="literal">-node2</span>    Ready                      &lt;none&gt;                 <span class="number">567</span>d   v1.<span class="number">22.0</span></span><br><span class="line"></span><br><span class="line">驱除master节点pod</span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl cordon k8s-master</span></span><br><span class="line">node/k8s<span class="literal">-master</span> already cordoned</span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl drain k8s-master --ignore-daemonsets --delete-emptydir-data --force</span></span><br><span class="line">node/k8s<span class="literal">-master</span> already cordoned</span><br><span class="line">WARNING: ignoring Daemon<span class="built_in">Set-managed</span> Pods: kube<span class="literal">-system</span>/calico<span class="literal">-node-4l4ll</span>, kube<span class="literal">-system</span>/kube<span class="literal">-proxy-pkz69</span></span><br><span class="line">node/k8s<span class="literal">-master</span> drained</span><br><span class="line"></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># apt-mark unhold kubeadm kubectl kubelet</span></span><br><span class="line">kubeadm was already not hold.</span><br><span class="line">kubectl was already not hold.</span><br><span class="line">kubelet was already not hold.</span><br><span class="line"></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># apt-get update</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">答案：</span><br><span class="line"></span><br><span class="line">切换 context</span><br><span class="line">kubectl get nodes</span><br><span class="line">ssh mk8s<span class="literal">-master-0</span></span><br><span class="line">kubectl cordon mk8s<span class="literal">-master-0</span></span><br><span class="line">kubectl drain mk8s<span class="literal">-master-0</span> <span class="literal">--ignore-daemonsets</span> <span class="literal">--delete-emptydir-data</span> <span class="literal">--force</span></span><br><span class="line">apt<span class="literal">-mark</span> unhold kubeadm kubectl kubelet</span><br><span class="line">apt<span class="literal">-cache</span> show kubeadm|grep <span class="number">1.29</span>.<span class="number">1</span></span><br><span class="line">apt<span class="literal">-get</span> update &amp;&amp; apt<span class="literal">-get</span> install <span class="literal">-y</span> kubeadm=<span class="number">1.29</span>.<span class="number">1</span><span class="literal">-00</span> &amp;&amp; apt<span class="literal">-mark</span> hold kubeadm</span><br><span class="line">kubeadm upgrade plan</span><br><span class="line">kubeadm upgrade apply v1.<span class="number">29.1</span> <span class="literal">--etcd-upgrade</span>=false</span><br><span class="line"></span><br><span class="line">apt<span class="literal">-get</span> update &amp;&amp; apt<span class="literal">-get</span> install <span class="literal">-y</span> kubelet=<span class="number">1.29</span>.<span class="number">1</span><span class="literal">-00</span> kubectl=<span class="number">1.29</span>.<span class="number">1</span><span class="literal">-00</span> &amp;&amp; apt<span class="literal">-mark</span> hold kubelet kubectl</span><br><span class="line">systemctl daemon<span class="literal">-reload</span> &amp;&amp; systemctl restart kubelet</span><br><span class="line">kubectl uncordon mk8s<span class="literal">-master-0kuc</span></span><br><span class="line">检查master节点状态以及版本</span><br><span class="line">kubectl get node</span><br><span class="line"></span><br><span class="line">参考：https://kubernetes.io/zh<span class="literal">-cn</span>/docs/tasks/administer<span class="literal">-cluster</span>/kubeadm/kubeadm<span class="literal">-upgrade</span>/</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-备份还原-etcd"><a href="#4-备份还原-etcd" class="headerlink" title="4.备份还原 etcd"></a>4.备份还原 etcd</h3><p>考题概述： 备份 <a href="https://127.0.0.1:2379/">https://127.0.0.1:2379</a> 上的 etcd 数据到 &#x2F;var&#x2F;lib&#x2F;backup&#x2F;etcd-snapshot.db，使⽤之前的⽂ 件 &#x2F;data&#x2F;backup&#x2F;etcd-snapshot-previous.db 还原 etcd，使⽤指定的 ca.crt 、 etcd-client.crt 、 etcd-client.key </p><p>考题解析： 备份 etcd 到指定⽬录、从指定备份⽂件还原 etcd </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#etcd备份</span></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># export ETCDCTL_API=3</span></span><br><span class="line">etcdctl <span class="literal">--endpoints</span>=https://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">2379</span> <span class="literal">--cacert</span>=/opt/KUIN00601/ca.crt <span class="literal">--cert</span>=/opt/KUIN00601/etcd<span class="literal">-client</span>.crt <span class="literal">--key</span>=/opt/KUIN00601/etcd<span class="literal">-client</span>.key snapshot save  /srv/<span class="keyword">data</span>/etcd<span class="literal">-snapshot</span>.db</span><br><span class="line"></span><br><span class="line"><span class="comment">#etcd还原</span></span><br><span class="line">root@k8s<span class="literal">-master</span>:etcdctl <span class="literal">--endpoints</span>=https://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">2379</span> <span class="literal">--cacert</span>=/opt/KUIN00601/ca.crt <span class="literal">--cert</span>=/opt/KUIN00601/etcd<span class="literal">-client</span>.crt <span class="literal">--key</span>=/opt/KUIN00601/etcd<span class="literal">-client</span>.key snapshot restore /srv/<span class="keyword">data</span>/etcd<span class="literal">-snapshot-previous</span>.db</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">参考：https://kubernetes.io/zh<span class="literal">-cn</span>/docs/tasks/administer<span class="literal">-cluster</span>/configure<span class="literal">-upgrade-etcd</span>/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-配置⽹络策略-NetworkPolicy"><a href="#5-配置⽹络策略-NetworkPolicy" class="headerlink" title="5.配置⽹络策略 NetworkPolicy"></a>5.配置⽹络策略 NetworkPolicy</h3><p>考题概述： 在命名空间 设置配置环境kubectl config use-context k8s</p><p>创建一个名为allow-port-from-namespace的新NetworkPolicy，以允许现有namespace my-app<br>中的Pods连接到同一namespace中其他pods的端口9200。</p><p>确保新的NetworkPolicy：<br>-不允许对没有在监听端口9200的pods访问<br>-不允许不来自namespace my-app的pods的访问</p><p>考题解析： 给my-app命名空间打一个标签，复制官⽹ services-networking&#x2F;network-policies 中的案例，删掉不必要的部分，设置⽹络策略 所属的 ns 为 my-app，端⼝为 9200，设置 namespaceSelector 为源ns my-app 的labels</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">切换答题环境（考试环境有多个，每道题要在对应的环境中作答）</span><br><span class="line">kubectl config <span class="built_in">use-context</span> k8s</span><br><span class="line"></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl get ns --show-labels</span></span><br><span class="line">NAME              STATUS   AGE    LABELS</span><br><span class="line">app<span class="literal">-team1</span>         Active   <span class="number">553</span>d   kubernetes.io/metadata.name=app<span class="literal">-team1</span></span><br><span class="line">default           Active   <span class="number">568</span>d   kubernetes.io/metadata.name=default</span><br><span class="line">fubar             Active   <span class="number">553</span>d   kubernetes.io/metadata.name=fubar</span><br><span class="line">ing<span class="literal">-internal</span>      Active   <span class="number">553</span>d   kubernetes.io/metadata.name=ing<span class="literal">-internal</span></span><br><span class="line">ingress<span class="literal">-nginx</span>     Active   <span class="number">553</span>d   app.kubernetes.io/instance=ingress<span class="literal">-nginx</span>,app.kubernetes.io/name=ingress<span class="literal">-nginx</span>,kubernetes.io/metadata.name=ingress<span class="literal">-nginx</span></span><br><span class="line">kube<span class="literal">-node-lease</span>   Active   <span class="number">568</span>d   kubernetes.io/metadata.name=kube<span class="literal">-node-lease</span></span><br><span class="line">kube<span class="literal">-public</span>       Active   <span class="number">568</span>d   kubernetes.io/metadata.name=kube<span class="literal">-public</span></span><br><span class="line">kube<span class="literal">-system</span>       Active   <span class="number">568</span>d   kubernetes.io/metadata.name=kube<span class="literal">-system</span></span><br><span class="line">my<span class="literal">-app</span>            Active   <span class="number">553</span>d   kubernetes.io/metadata.name=my<span class="literal">-app</span>,name=my<span class="literal">-app</span></span><br><span class="line"></span><br><span class="line">给my<span class="literal">-app</span>命名空间打一个标签</span><br><span class="line">kubectl label ns my<span class="literal">-app</span> project=my<span class="literal">-app</span></span><br><span class="line"></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># vi networkpolicy.yaml </span></span><br><span class="line">apiVersion: networking.k8s.io/v1</span><br><span class="line">kind: NetworkPolicy</span><br><span class="line">metadata:</span><br><span class="line">  name: allow<span class="literal">-ports</span></span><br><span class="line">  namespace: my<span class="literal">-app</span></span><br><span class="line">spec:</span><br><span class="line">  podSelector:</span><br><span class="line">    matchLabels: &#123;&#125;</span><br><span class="line">  policyTypes:</span><br><span class="line">    - Ingress</span><br><span class="line">  ingress:</span><br><span class="line">    - from:</span><br><span class="line">        - namespaceSelector:</span><br><span class="line">            matchLabels:</span><br><span class="line">              project: my<span class="literal">-app</span></span><br><span class="line">      ports:</span><br><span class="line">        - protocol: TCP</span><br><span class="line">          port: <span class="number">9200</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl apply -f networkpolicy.yaml </span></span><br><span class="line">networkpolicy.networking.k8s.io/allow<span class="literal">-port-from-namespace</span> created</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">参考：https://kubernetes.io/zh<span class="literal">-cn</span>/docs/concepts/services<span class="literal">-networking</span>/network<span class="literal">-policies</span>/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="6-创建Service"><a href="#6-创建Service" class="headerlink" title="6.创建Service"></a>6.创建Service</h3><p>考题概述： 重新配置已有的 deployment front-end，添加⼀个名称为 http 的端⼝，暴露80&#x2F;TCP，创建名 称为 front-end-svc 的 service，暴露容器的 http 端⼝，配置service 的类别为NodePort </p><p>考题解析： 按照需要edit deploy，添加端⼝信息，通过 expose 命令使⽤ NodePort 的⽅式暴露端⼝。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl edit deployment front-end</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: front<span class="literal">-end</span></span><br><span class="line">  name: front<span class="literal">-end</span></span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  replicas: <span class="number">1</span></span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: front<span class="literal">-end</span></span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: front<span class="literal">-end</span></span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: nginx</span><br><span class="line">        image: nginx</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: <span class="number">80</span></span><br><span class="line">          name: http</span><br><span class="line">          protocol: TCP</span><br><span class="line"></span><br><span class="line"><span class="comment">#exit ports添加以下内容</span></span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: <span class="number">80</span></span><br><span class="line">          name: http</span><br><span class="line">          protocol: TCP</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl expose deployment front-end --type=NodePort --port=80 --target-port=http --name=front-end-svc</span></span><br><span class="line">service/front<span class="literal">-end-svc</span> exposed</span><br><span class="line"></span><br><span class="line">验证方法</span><br><span class="line">kubectl describe svc front<span class="literal">-end-svc</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">参考：https://kubernetes.io/zh<span class="literal">-cn</span>/docs/concepts/services<span class="literal">-networking</span>/service/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="7-按要求创建-Ingress-资源"><a href="#7-按要求创建-Ingress-资源" class="headerlink" title="7.按要求创建 Ingress 资源"></a>7.按要求创建 Ingress 资源</h3><p>考题概述： 创建⼀个新的 Ingress 资源，名称 pong，命名空间 ing-internal，使⽤ &#x2F;hello 路径暴露服务 hello 的 5678 端⼝ </p><p>考题解析： 拷⻉官⽂的 yaml 案例，修改相关参数即可，设置成功后需要通过 curl -kl &#x2F;hello 来测试</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># vi ingress.yaml </span></span><br><span class="line">apiVersion: networking.k8s.io/v1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: pong</span><br><span class="line">  namespace：ing<span class="literal">-internal</span></span><br><span class="line">spec:</span><br><span class="line">  ingressClassName: nginx</span><br><span class="line">  rules:</span><br><span class="line">  - http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /hello</span><br><span class="line">        pathType: Prefix</span><br><span class="line">        backend:</span><br><span class="line">          service:</span><br><span class="line">            name: hello</span><br><span class="line">            port:</span><br><span class="line">              number: <span class="number">5678</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl get ingress -n ing-internal </span></span><br><span class="line">NAME   <span class="class"><span class="keyword">CLASS</span>    <span class="title">HOSTS</span>   <span class="title">ADDRESS</span>                           <span class="title">PORTS</span>   <span class="title">AGE</span></span></span><br><span class="line"><span class="class"><span class="title">pong</span>   &lt;<span class="title">none</span>&gt;   *       192.168.123.151,192.168.123.152   80      57<span class="title">s</span></span></span><br><span class="line"><span class="class"><span class="title">root</span>@<span class="title">k8s</span>-<span class="title">master</span>:~# <span class="title">curl</span> -<span class="title">kl</span> 192.168.123.151/<span class="title">hello</span></span></span><br><span class="line"><span class="class"><span class="title">hello</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">参考：<span class="title">https</span>://<span class="title">kubernetes</span>.<span class="title">io</span>/<span class="title">zh</span>-<span class="title">cn</span>/<span class="title">docs</span>/<span class="title">concepts</span>/<span class="title">services</span>-<span class="title">networking</span>/<span class="title">ingress</span>/</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br></pre></td></tr></table></figure><h3 id="8-扩容Deployment"><a href="#8-扩容Deployment" class="headerlink" title="8.扩容Deployment"></a>8.扩容Deployment</h3><p>考题概述： 扩容 deployment guestbook 为 6个pod </p><p>考题解析： 调整 replicas 为 6 即可，送分题</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl get deploy</span></span><br><span class="line">NAME                     READY   UP<span class="literal">-TO-DATE</span>   AVAILABLE   AGE</span><br><span class="line">front<span class="literal">-end</span>                <span class="number">1</span>/<span class="number">1</span>     <span class="number">1</span>            <span class="number">1</span>           <span class="number">553</span>d</span><br><span class="line">guestbook                <span class="number">2</span>/<span class="number">2</span>     <span class="number">2</span>            <span class="number">2</span>           <span class="number">553</span>d</span><br><span class="line">nfs<span class="literal">-client-provisioner</span>   <span class="number">1</span>/<span class="number">1</span>     <span class="number">1</span>            <span class="number">1</span>           <span class="number">553</span>d</span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl scale deployment --replicas=6 guestbook</span></span><br><span class="line">deployment.apps/guestbook scaled</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl get deploy</span></span><br><span class="line">NAME                     READY   UP<span class="literal">-TO-DATE</span>   AVAILABLE   AGE</span><br><span class="line">front<span class="literal">-end</span>                <span class="number">1</span>/<span class="number">1</span>     <span class="number">1</span>            <span class="number">1</span>           <span class="number">553</span>d</span><br><span class="line">guestbook                <span class="number">6</span>/<span class="number">6</span>     <span class="number">6</span>            <span class="number">6</span>           <span class="number">553</span>d</span><br><span class="line">nfs<span class="literal">-client-provisioner</span>   <span class="number">1</span>/<span class="number">1</span>     <span class="number">1</span>            <span class="number">1</span>           <span class="number">553</span>d</span><br><span class="line"></span><br><span class="line">参考：https://kubernetes.io/zh<span class="literal">-cn</span>/docs/concepts/workloads/controllers/deployment/</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="9-调度-pod-到指定节点"><a href="#9-调度-pod-到指定节点" class="headerlink" title="9.调度 pod 到指定节点"></a>9.调度 pod 到指定节点</h3><p>考题概述： 创建pod名称nginx-kusc0041，镜像nginx，调度该pod到disk&#x3D;ssd的节点上 </p><p>考题解析： 拷⻉官⽂案例，修改下 pod 名称和镜像，删除多余的部分即可，送分题</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">切换答题环境</span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl config use-context k8s</span></span><br><span class="line"></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># vi nginx-kusc00401.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx<span class="literal">-kusc00401</span></span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx</span><br><span class="line">    image: nginx</span><br><span class="line">  nodeSelector:</span><br><span class="line">    disktype: ssd</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl apply -f nginx-kusc00401.yaml </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">参考：https://kubernetes.io/zh<span class="literal">-cn</span>/docs/tasks/configure<span class="literal">-pod-container</span>/assign<span class="literal">-pods-nodes</span>/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="10-统计ready-状态节点数量"><a href="#10-统计ready-状态节点数量" class="headerlink" title="10.统计ready 状态节点数量"></a>10.统计ready 状态节点数量</h3><p>考题概述： 检查有多少个 nodes 已准备就绪（不包括被打上Taint: NoSchedule 的节点），并将数量写入&#x2F;opt&#x2F;KUSC00402&#x2F;kusc00402.txt。</p><p>考题解析： describe node过滤NoSchedule的节点，统计数量输⼊指定⽂档即可，送分题</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">获取Ready的节点数a</span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl get nodes | grep -w  Ready | wc -l</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br><span class="line">获取有污点和没有调度的节点数b</span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl describe nodes | grep Taints | grep -i NoSchedule | wc -l</span></span><br><span class="line">Taints:             node<span class="literal">-role</span>.kubernetes.io/master:NoSchedule</span><br><span class="line">Taints:             &lt;none&gt;</span><br><span class="line">Taints:             &lt;none&gt;</span><br><span class="line"></span><br><span class="line">将a<span class="literal">-b</span>的结果写入目标文件</span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># echo 1 &gt; /opt/KUSC00402/kusc00402.txt</span></span><br><span class="line"></span><br><span class="line">参考：https://kubernetes.io/zh<span class="literal">-cn</span>/docs/concepts/scheduling<span class="literal">-eviction</span>/taint<span class="operator">-and</span><span class="literal">-toleration</span>/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="11-创建多容器的pod"><a href="#11-创建多容器的pod" class="headerlink" title="11.创建多容器的pod"></a>11.创建多容器的pod</h3><p>考点概述： 创建一个名字为kucc4的pod，在pod里面分别为以下每个images单独运行一个app container（可能会有1-4 个images）：nginx+redis+memcached+consul</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># vi kucc4.yaml </span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: kucc4</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx</span><br><span class="line">    image: nginx</span><br><span class="line">  - name: redis</span><br><span class="line">    image: redis</span><br><span class="line">  - name: memcached</span><br><span class="line">    image: memcached</span><br><span class="line">  - name: consul</span><br><span class="line">    image: consul</span><br><span class="line">    </span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl apply -f kucc4.yaml </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">参考：https://kubernetes.io/zh<span class="literal">-cn</span>/docs/concepts/workloads/pods/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="12-按要求创建PV"><a href="#12-按要求创建PV" class="headerlink" title="12.按要求创建PV"></a>12.按要求创建PV</h3><p>考题概述： 创建名为app-data的persistent volume，容量为1Gi，访问模式ReadWriteMany。volume类型为hostPath，位于&#x2F;srv&#x2F;app-data。</p><p>考题解析：直接从官⽅拷⻉合适的案例，修改参数，然后设置 hostPath为&#x2F;srv&#x2F;app-data即可</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># vi app-data.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">metadata:</span><br><span class="line">  name: app<span class="literal">-data</span></span><br><span class="line">spec:</span><br><span class="line">  capacity:</span><br><span class="line">    storage: <span class="number">1</span><span class="built_in">Gi</span></span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany</span><br><span class="line">  hostPath:</span><br><span class="line">    path: <span class="string">&quot;/srv/app-data&quot;</span></span><br><span class="line"></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl apply -f app-data.yaml</span></span><br><span class="line"></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl get pv</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">参考：https://kubernetes.io/zh<span class="literal">-cn</span>/docs/tasks/configure<span class="literal">-pod-container</span>/configure<span class="literal">-persistent-volume-storage</span>/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="13-创建和使⽤PVC"><a href="#13-创建和使⽤PVC" class="headerlink" title="13.创建和使⽤PVC"></a>13.创建和使⽤PVC</h3><p>考题概述： 创建一个新的PersistentVolumeClaim：</p><ul><li>名称：pvvolume</li><li>class：csi-hostpath-sc</li><li>容量：10Mi</li></ul><p>创建一个新的pod，此pod 将作为volume挂载到PersistentVolumeClaim：</p><ul><li>名称：web-server</li><li>image: nginx</li><li>挂载路径: &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html<br>配置新的pod，以对volume具有ReadWriteOnce 权限。<br>最后，使用kubectl edit 或者kubectl patch 将PersistentVolumeClaim的容量扩展为70Mi，并记录此次更改。</li></ul><p>考题解析： 根据官⽅⽂档拷⻉⼀个PVC，修改参数，复制官⽹nginx 的pod，然后添加volumeMounts和 volume</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建PVC</span></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># vi pvvolume.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: pvvolume</span><br><span class="line">spec:</span><br><span class="line">  storageClassName: csi<span class="literal">-hostpath-sc</span></span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: <span class="number">10</span><span class="built_in">Mi</span></span><br><span class="line"></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl apply -f pvvolume.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建pod</span></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># vi web-server.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: web<span class="literal">-server</span></span><br><span class="line">spec:</span><br><span class="line">  volumes:</span><br><span class="line">    - name: pvvolume</span><br><span class="line">      persistentVolumeClaim:</span><br><span class="line">        claimName: pvvolume</span><br><span class="line">  containers:</span><br><span class="line">    - name: nginx</span><br><span class="line">      image: nginx</span><br><span class="line">      volumeMounts:</span><br><span class="line">        - mountPath: <span class="string">&quot;/usr/share/nginx/html&quot;</span></span><br><span class="line">          name: pvvolume</span><br><span class="line"></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl apply -f web-server.yaml</span></span><br><span class="line"></span><br><span class="line">storage修改为<span class="number">70</span><span class="built_in">Mi</span> </span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl edit pvc pvvolume --save-config</span></span><br><span class="line">resource:</span><br><span class="line">  requests:</span><br><span class="line">  stoeage: <span class="number">70</span><span class="built_in">Mi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">参考：https://kubernetes.io/zh<span class="literal">-cn</span>/docs/tasks/configure<span class="literal">-pod-container</span>/configure<span class="literal">-persistent-volume-storage</span>/</span><br></pre></td></tr></table></figure><h3 id="14-监控pod的⽇志"><a href="#14-监控pod的⽇志" class="headerlink" title="14.监控pod的⽇志"></a>14.监控pod的⽇志</h3><p>考题概述： 监控foo pod中的⽇志 获取包含unable-to-access-website的⽇志，并将⽇志写⼊到&#x2F;opt&#x2F;KUTR00101&#x2F;foo</p><p>考题解析： kubectl logs 获取⽇志，通过 grep 进⼀步获取⽬标⽇志，送分题</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl logs foo |grep unable-to-access-website &gt; /opt/KUTR00101/foo</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="15-添加-sidecar-容器并输出⽇志"><a href="#15-添加-sidecar-容器并输出⽇志" class="headerlink" title="15.添加 sidecar 容器并输出⽇志"></a>15.添加 sidecar 容器并输出⽇志</h3><p>考题概述： 将一个现有的 Pod 集成到 Kubernetes 的内置日志记录体系结构中（例如 kubectl logs）。添加 streaming sidecar 容器是实现此要求的一种好方法。使用busybox Image来将名为sidecar的sidecar容器添加到现有的Pod 11-factor-app上，新的sidecar容器必须运行以下命令：&#x2F;bin&#x2F;sh -c tail -n+1 -f &#x2F;var&#x2F;log&#x2F;11-factor-app.log</p><p>使用volume挂载&#x2F;var&#x2F;log&#x2F;目录，确保sidecar能访问&#x2F;var&#x2F;log&#x2F;11-factor-app.log文件</p><p>考题解析： 通过 kubectl get pod -o yaml 的⽅法备份原始 pod 信息，删除旧的pod 11-factor-app copy ⼀份新 yaml ⽂件，添加 ⼀个名称为 sidecar 的容器，新建 emptyDir 的卷，确保两个容器都挂载 了 &#x2F;var&#x2F;log ⽬录，新建含有 sidecar 的 pod，并通过 kubectl logs 验证；</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl get pod 11-factor-app -oyaml &gt;factor-app.yaml</span></span><br><span class="line"></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># vim factor-app.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: <span class="number">11</span><span class="literal">-factor-app</span></span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: count</span><br><span class="line">    image: busybox</span><br><span class="line">    args:</span><br><span class="line">    - /bin/sh</span><br><span class="line">    - <span class="literal">-c</span></span><br><span class="line">    - &gt;</span><br><span class="line">      i=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span> true;</span><br><span class="line">      <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i:</span> <span class="variable">$</span>(date)&quot;</span> &gt;&gt; /var/log/<span class="number">11</span><span class="literal">-factor-app</span>.log;</span><br><span class="line">        i=<span class="variable">$</span>((i+<span class="number">1</span>));</span><br><span class="line">        <span class="built_in">sleep</span> <span class="number">1</span>;</span><br><span class="line">      done      </span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: varlog</span><br><span class="line">      mountPath: /var/log</span><br><span class="line">  - name: sidecar</span><br><span class="line">    image: busybox</span><br><span class="line">    args: [/<span class="type">bin</span>/<span class="type">sh</span>, -<span class="type">c</span>, <span class="string">&#x27;tail -n+1 -f /var/log/11-factor-app.log&#x27;</span>]</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: varlog</span><br><span class="line">      mountPath: /var/log</span><br><span class="line">  volumes:</span><br><span class="line">  - name: varlog</span><br><span class="line">    emptyDir: &#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl delete pod 11-factor-app </span></span><br><span class="line">pod <span class="string">&quot;11-factor-app&quot;</span> deleted</span><br><span class="line"></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl apply -f factor-app.yaml</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">参考：https://kubernetes.io/zh<span class="literal">-cn</span>/docs/concepts/cluster<span class="literal">-administration</span>/logging/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="16-查看-cpu-使⽤率最⾼的-pod"><a href="#16-查看-cpu-使⽤率最⾼的-pod" class="headerlink" title="16.查看 cpu 使⽤率最⾼的 pod"></a>16.查看 cpu 使⽤率最⾼的 pod</h3><p>考题概述： 通过pod label name&#x3D;cpu-user，找到运行时占用大量CPU 的pod，并将占用CPU最高的pod名称写入到文件&#x2F;opt&#x2F;KUTR000401&#x2F;KUTR00401.txt（已存在）</p><p>考题解析： 使⽤top命令，结合 -l label_key&#x3D;label_value 和 –sort&#x3D;cpu 过滤出⽬标即可</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl top pod -l name=cpu-user -A --sort-by=&#x27;cpu&#x27; &gt;&gt;/opt/KUTR00401/KUTR00401.txt</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="17-排查集群中故障节点"><a href="#17-排查集群中故障节点" class="headerlink" title="17.排查集群中故障节点"></a>17.排查集群中故障节点</h3><p>考题概述： 节点wk8s-node-0状态为NotReady，查看原因并恢复其状态为Ready 确保操作为持久的 </p><p>考题分析： 通过get nodes查看异常节点，登录节点查看kubelet等组件的status并判断原因 启动kubelet并enable kubelet即可</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">切换 context</span><br><span class="line">kubectl get nodes</span><br><span class="line">ssh wk8s<span class="literal">-node-0</span></span><br><span class="line">sudo <span class="literal">-i</span></span><br><span class="line">systemctl restart kubelet</span><br><span class="line">systemctl status kubelet</span><br><span class="line">systemctl enable kubelet</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@k8s<span class="literal">-master</span>:~<span class="comment"># kubectl get nodes</span></span><br><span class="line">NAME         STATUS                     ROLES                  AGE    VERSION</span><br><span class="line">k8s<span class="literal">-master</span>   Ready,SchedulingDisabled   control<span class="literal">-plane</span>,master   <span class="number">569</span>d   v1.<span class="number">22.0</span></span><br><span class="line">k8s<span class="literal">-node1</span>    Ready                      &lt;none&gt;                 <span class="number">569</span>d   v1.<span class="number">22.0</span></span><br><span class="line">k8s<span class="literal">-node2</span>    Ready                      &lt;none&gt;                 <span class="number">569</span>d   v1.<span class="number">22.0</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>暗藏玄坤</title>
      <link href="/2024/04/09/%E5%B0%8F%E9%BB%91%E5%AD%90%E9%9C%B2%E5%87%BA%E9%B8%A1%E8%84%9A%E4%BA%86%E5%90%A7/"/>
      <url>/2024/04/09/%E5%B0%8F%E9%BB%91%E5%AD%90%E9%9C%B2%E5%87%BA%E9%B8%A1%E8%84%9A%E4%BA%86%E5%90%A7/</url>
      
        <content type="html"><![CDATA[<p><img src="https://pic.imgdb.cn/item/6614f5d668eb9357130a10a1.png"></p><p><img src="https://pic.imgdb.cn/item/6614f5e268eb9357130a14ae.webp"></p><p><img src="https://pic.imgdb.cn/item/6614f64d68eb9357130a8d06.png"></p><p><img src="https://pic.imgdb.cn/item/6614f65168eb9357130a9317.webp"></p><p><img src="https://pic.imgdb.cn/item/6614f65168eb9357130a92e3.webp"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
